{"version":3,"sources":["components/Navig/Frends/Frends.module.css","components/Messages/Messages.module.css","components/Messages/Message/Message.module.css","components/compon/Redux-Forms/Textarea.module.css","components/Music/Music.module.css","components/News/News.module.css","no foto/default_avatar_5d937716c1098.jpg","no foto/99aa7a_19e4c74d26a94c8ba729003cab00f4d2_mv2.gif","components/Content/Contents.module.css","no foto/no.jpg","logo.png","components/Content/MyPost/Post/Post.module.css","components/Content/MyPost/MyPost.module.css","no foto/cityjpg.jpg","components/setFrends/frend.module.css","components/Content/Content.module.css","components/registration/registration.module.css","components/Navig/Frends/Frends.jsx","redux/reselect_message.js","components/Navig/Navig.jsx","components/Navig/Frends/FrendsConteiner.jsx","redux/message_reducer.js","validator/validator.js","components/compon/Redux-Forms/Textarea.js","components/Messages/Message/Message.jsx","redux/reselect_authen.js","components/HOC/withAuthenRedirect.js","components/Messages/Message/MessageConteiner.jsx","components/Messages/Users/Users.jsx","components/Messages/Users/UsersConteiner.jsx","components/Messages/Messendg.jsx","components/Music/Music.jsx","components/News/News.jsx","components/API/api.js","redux/frends_reducer.js","redux/reselect_frends.js","components/compon/Pagination/pagination.js","components/setFrends/setFrends.jsx","components/compon/preloader/preloader.js","components/setFrends/setFrendsConteiner.js","components/Content/Content.js","redux/content_reducer.js","redux/reselect_profale.js","components/Content/ContentConteiner.jsx","components/Header/Header.js","redux/authen_reducer.js","components/Header/HeaderConteiner.js","components/compon/Redux-Forms/input.js","components/compon/Redux-Forms/Form_Field.js","components/registration/registration.js","components/Content/MyPost/Post/Post.jsx","components/Content/MyPost/MyPost.jsx","components/Content/MyPost/MyPostConteinr.jsx","components/Content/MyStatus.js","components/Content/MyDataContact.js","components/Content/Contents.js","components/Content/MyNameConteiner.js","redux/app_reducer.js","redux/reselect_app.js","redux/redux_store.js","App.js","index.js","components/Navig/Nav.module.css","components/Messages/Users/Users.module.css","components/compon/Redux-Forms/Input.module.css","components/Header/Header.module.css","components/Content/MyDataContact.module.css"],"names":["module","exports","Ava","props","src","fr","name","Frends","frend","map","f","img","key","id","className","c","fren","getFrendUsers","state","messageStat","userData","Navig","connect","nav","navigations","to","activeClassName","active","inicial","messData","message","messageReducer","action","type","newP","newText","newMess","required","value","maxLength","max","length","minLength","min","validate","test","Textarea","input","meta","touched","error","Mess","maxLengths","minLengths","MyAnswer","reduxForm","form","onSubmit","handleSubmit","Field","component","Mes","mesUsers","mes","messages","messa","addMes","getIsCheck","authen","isCheck","getIsLogin","login","getIsMail","email","getUserAuthId","mapStateToPropsForRedirect","withAuthenRedirect","Component","MessegForm","compose","dispatch","addMessData","Change","updeteNewMess","User","messanges","us","alt","ava","Us","usersName","names","users","UsConteiner","Message","store","Music","music","News","intApi","axios","withCredentials","headers","baseURL","UserApiDelete","delete","UserApiPost","post","UserApiProfil","currentPage","pageSize","get","FotoUsersApi","photos","formData","FormData","append","put","putUsers","status","postLogin","password","rememberMe","captcha","saveCont","profile","totalPage","isLoading","blockButton","removeFrend","userId","appendNewFrend","setPage","setIsLoading","pressButton","setUsers","a","response","data","items","totalPages","totalCount","UserApiDeletePost","UserApi","NewFrend","resultCode","setDelete","setPost","frendsReducer","AppendRemoveFrend","NewFollowed","u","followed","filter","getUser","frendsStat","getTotalPage","getPageSize","getCurrentPage","getIsLoading","getBlockButton","Paginat","handlePageChange","page","total","this","pageCount","limit","pages","hasNextPage","hasPreviousPage","previousPage","nextPage","getPageItemProps","paginat","big","pageValue","onPageChange","activePage","backgroundColor","style","React","SetFrend","small","foto","disabled","some","red","onClick","green","description","Preloader","load","width","SetFrendAPI","changePage","appendFrend","Content","contents","no","aboutMe","lookingForAJob","ADD_MESS","postData","messang","age","laik","SetFrendsLook","SetStatus","photoUsers","SetFrends","usersId","then","getStatus","contentReducer","newM","getProfile","contentStat","getStatusUsers","ContentConteiner","match","params","isLogin","WithNewRouter","withRouter","Header","header","logo","deleteName","myCaptcha","setAuthenUser","getSecurityCaptchaUrl","url","authentReducer","AthenDeleteUsers","NewObject","HeaderConteiner","isMail","Input","inputs","NewField","minLengthPassword","RegistrForm","htmlFor","text","checkbox","errors","registration","postName","stopSubmit","_error","Post","PostForm","textarea","MyPost","MyPosts","posts","values","addPost","MyPostConteiner","addMessActiv","MyStatus","useState","mode","setMode","setStatus","useEffect","myStatus","onDoubleClick","autoFocus","onBlur","putStatus","onChange","e","currentTarget","ChangleDataContact","Object","keys","contacts","k","Contents","changeData","MyContact","mySocialNetwork","myAddress","MyDataContact","fullName","userAuthId","lookingForAJobDescription","content","citi","city","large","MyAvatar","onSavePhoto","for","target","files","photoUsersId","cont","saveContact","initialValues","myPost","Conten","prevProps","prevState","snapshot","Promise","reject","entrance","appReducer","getEntrance","app","reducers","combineReducers","formReducer","createStore","applyMiddleware","thunk","App","waitingToEnterUser","path","render","MyNameConteiner","AppContener","NewAppMy","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.530b3413.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fren\":\"Frends_fren__1NzXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__3_gLr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messa\":\"Message_messa__264E4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Textarea_error__P9lz8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__109bD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"News_music__1TcxR\"};","module.exports = __webpack_public_path__ + \"static/media/default_avatar_5d937716c1098.c2b7accc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/99aa7a_19e4c74d26a94c8ba729003cab00f4d2_mv2.59ddda07.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contents\":\"Contents_contents__2RrDH\"};","module.exports = __webpack_public_path__ + \"static/media/no.498e9512.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b3484e5d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3tDwW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyPost_textarea__iz4q1\"};","module.exports = __webpack_public_path__ + \"static/media/cityjpg.bcf634d1.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frend\":\"frend_frend__2AgCm\",\"data\":\"frend_data__2spDq\",\"description\":\"frend_description__2ODpP\",\"name\":\"frend_name__1XkC0\",\"status\":\"frend_status__jvJi9\",\"country\":\"frend_country__2w6o5\",\"city\":\"frend_city__2GETB\",\"ava\":\"frend_ava__1PIOd\",\"green\":\"frend_green__2FwKP\",\"red\":\"frend_red__5wLvN\",\"pages\":\"frend_pages__2Pv4O\",\"page\":\"frend_page__14yFb\",\"paginat\":\"frend_paginat__3TQXh\",\"big\":\"frend_big__ZuB6B\",\"pageSize\":\"frend_pageSize__2th6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__ksEMZ\",\"citi\":\"Content_citi__lNi-b\",\"avatar\":\"Content_avatar__3Atyw\",\"myStatus\":\"Content_myStatus__1GOX4\",\"cont\":\"Content_cont__IMet5\",\"MyAvatar\":\"Content_MyAvatar__3EgQX\",\"myPost\":\"Content_myPost__1FHaO\",\"onSavePhoto\":\"Content_onSavePhoto__jTgaW\",\"data\":\"Content_data___xnRo\",\"changeData\":\"Content_changeData__3phXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"registration_registration__A1k_M\",\"checkbox\":\"registration_checkbox__3ACbB\",\"errors\":\"registration_errors__3HV3M\"};","import React from \"react\";\r\nimport c from './Frends.module.css'\r\n\r\n\r\nlet Ava = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={props.fr}/>\r\n            </div>\r\n            <div>\r\n                {props.name}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nlet Frends = (props) => {\r\n    let frend = props.frend.map(f => <Ava fr={f.img} key={f.id} name={f.name}/>)\r\n    return (\r\n        <div className={c.fren}>\r\n            {frend}\r\n        </div>\r\n    )\r\n};\r\nexport default Frends;","export const getFrendUsers = (state)=>{\r\n    return (\r\n        state.messageStat.userData\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport c from './Nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FrendsConteiner from \"./Frends/FrendsConteiner\";\r\n\r\n\r\n\r\n\r\nlet Navig = () => {\r\n\r\n    return (\r\n        <nav className={c.nav}>\r\n            <div className={c.navigations}>\r\n                <NavLink to='/me' activeClassName = {c.active} >Моя страница</NavLink>\r\n            </div>\r\n            {/*<div className={c.navigations}>*/}\r\n            {/*    <NavLink to='/Content' activeClassName = {c.active} >Профиль друга</NavLink>*/}\r\n            {/*</div>*/}\r\n            <div className={c.navigations}>\r\n                <NavLink to='/Messages' activeClassName = {c.active}>Сообщения</NavLink>\r\n            </div>\r\n            <div className={c.navigations}>\r\n                <NavLink to='/Frends' activeClassName = {c.active}>Друзья</NavLink>\r\n            </div>\r\n            {/*<div className={c.navigations}>*/}\r\n            {/*    <NavLink to='/News' activeClassName = {c.active}>Новости</NavLink>*/}\r\n            {/*</div>*/}\r\n            {/*<div className={c.navigations}>*/}\r\n            {/*    <NavLink to='/Music' activeClassName = {c.active}>Музыка</NavLink>*/}\r\n            {/*</div>*/}\r\n            {/*<div className={c.settin}>*/}\r\n            {/*    <NavLink to='/Settings' activeClassName = {c.active}>Настройка</NavLink>*/}\r\n            {/*</div>*/}\r\n            {/*<div className={c.frend}>*/}\r\n            {/* ДРУЗЬЯ&emsp;ONLINE*/}\r\n            {/*</div>*/}\r\n            {/*<div>*/}\r\n            {/*    <FrendsConteiner />*/}\r\n            {/*</div>*/}\r\n        </nav>\r\n    )\r\n};\r\n\r\n\r\nexport default Navig;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Frends from \"./Frends\";\r\nimport {getFrendUsers} from \"../../../redux/reselect_message\";\r\n\r\n\r\n\r\n\r\n// let FrendsConteiner = (props) => {\r\n//     let frend = props.navigData.map(f => <Ava fr={f.img} name={f.name}/>)\r\n//     return (\r\n//         <div className={c.fren}>\r\n//             {frend}\r\n//         </div>\r\n//     )\r\n// };\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        frend:getFrendUsers(state)\r\n    }\r\n}\r\n\r\nconst FrendsConteiner = connect(mapStateToProps)(Frends)\r\nexport default FrendsConteiner;","const ADD_MESSDATA = 'message/ADD_MESSDATA';\r\nconst UPDETE_NEW_MESS = 'message/UPDETE_NEW_MESS';\r\n\r\nlet inicial = {\r\n    userData: [\r\n        {\r\n            id: 1,\r\n            name: 'Андрей',\r\n            img: 'https://avatars.mds.yandex.net/get-pdb/1025945/86f10e6d-eab5-4572-8c07-c672b854d2a5/s1200?webp=false'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Дима',\r\n            img: 'https://7themes.su/php/imres/resize.php?width=2400&height=1350&cropratio=16:9&image=/_ph/40/397399018.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Саша',\r\n            img: 'https://avatars.mds.yandex.net/get-pdb/879561/85a9302c-2118-46f9-825e-dd3c28118928/s1200?webp=false'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Петя',\r\n            img: 'https://avatars.yandex.net/get-music-user-playlist/27701/265236767.1000.16809/m1000x1000?1498108273588&webp=false'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Вова',\r\n            img: 'https://avatars.mds.yandex.net/get-pdb/2078597/a2789378-197a-4121-bc36-6c747d294d9b/s1200?webp=false'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Гога',\r\n            img: 'https://demotivation.ru/wp-content/uploads/2020/05/1463056020_205639_1463060534_noticia_normal_recorte1-1.jpg'\r\n        },\r\n    ],\r\n    messData: [\r\n        {id: 1, message: 'Привет'},\r\n        {id: 2, message: 'Как дела?'},\r\n        {id: 3, message: 'Что делаешь?'},\r\n        {id: 4, message: 'Почему молчишь?'},\r\n    ],\r\n\r\n};\r\nconst messageReducer = (state = inicial, action) => {\r\n    // let stateCopy = {...state, messData:[...state.messData]}\r\n    switch (action.type) {\r\n        case ADD_MESSDATA:\r\n            let newP = {\r\n                id: 5, message: action.newText\r\n            };\r\n            return ({\r\n                ...state,\r\n                messData: [newP, ...state.messData ],\r\n            })\r\n            // stateCopy.messData = [...state.messData]\r\n            // stateCopy.messData.unshift(newP);\r\n            // stateCopy.newMess = '';\r\n        case UPDETE_NEW_MESS:\r\n            return ({...state,\r\n                newMess: action.newMess\r\n            })\r\n            // stateCopy.newMess = action.newMess;\r\n            // return stateCopy;\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport const addMessData = (newText) => {\r\n    return (\r\n        {type: ADD_MESSDATA, newText}\r\n    )\r\n}\r\nexport const updeteNewMess = (mes) => {\r\n    return (\r\n        {type: UPDETE_NEW_MESS, newMess: mes}\r\n    )\r\n}\r\nexport default messageReducer;","import React from \"react\";\r\n\r\n\r\nexport const required = (value)=> {\r\n        if (value) return undefined;\r\n        return 'пустое поле'\r\n}\r\n\r\nexport const maxLength = max=>(value)=> {\r\n    if (value && value.length > max) return `Слишком много символов максимум ${max}`;\r\n    return undefined\r\n}\r\n\r\nexport const minLength = min=>(value)=> {\r\n    if (value && value.length < min) return `недостаточно символов минимум ${min}`;\r\n    return undefined\r\n}\r\n\r\nexport const validate = (value) => {\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value))\r\n    return 'Неверный адрес электронной почты';\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport c from \"./Textarea.module.css\"\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {meta.touched && meta.error && <span className={c.error}>{meta.error}</span>}\r\n            </div>\r\n            <textarea {...input} {...props} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport c from './Message.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, minLength, required} from \"../../../validator/validator\";\r\nimport {Textarea} from \"../../compon/Redux-Forms/Textarea\";\r\n\r\n\r\nlet Mess = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nlet Mes = (props) => {\r\n    let addMes = (value) => {\r\n        props.addMes(value.newText);\r\n    }\r\n\r\n    let mesUsers = props.mes.messData.map(messages => <Mess message={messages.message} key={messages.id}/>)\r\n    return <div className={c.messa}>\r\n        {mesUsers}\r\n        <MyAnswer onSubmit={addMes}/>\r\n    </div>\r\n\r\n};\r\nconst maxLengths = maxLength(10);\r\nconst minLengths = minLength(3);\r\nconst Messa = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newText'} validate={[required, maxLengths,minLengths]}/>\r\n            </div>\r\n            <div>\r\n                <button>ввод</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst MyAnswer = reduxForm({form: 'newTexts'})(Messa)\r\nexport default Mes;","export const getIsCheck = (state)=>{\r\n    return (\r\n        state.authen.isCheck\r\n    )\r\n};\r\nexport const getIsLogin = (state)=>{\r\n    return (\r\n        state.authen.login\r\n    )\r\n};\r\nexport const getIsMail = (state)=>{\r\n    return (\r\n        state.authen.email\r\n    )\r\n};\r\nexport const getUserAuthId = (state)=>{\r\n    return (\r\n        state.authen.id\r\n    )\r\n};\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getIsCheck} from \"../../redux/reselect_authen\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isCheck: getIsCheck(state)\r\n    }\r\n}\r\n\r\nexport const withAuthenRedirect = (Component) => {\r\n    let RedirectComponents = (props) => {\r\n        if (!props.isCheck) return <Redirect to={'/Registration'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponents)\r\n}\r\nexport default withAuthenRedirect;\r\n\r\n// let mapStateToPropsForRedirect = (state) => {\r\n//     return {\r\n//         isCheck:state.authen.isCheck\r\n//     }\r\n// }\r\n// export const withAuthenRedirect  = (Component)=>{\r\n//     class RedirectComponents extends React.Component {\r\n//         render() {\r\n//             if (!this.props.isCheck) return <Redirect to={'/Registration'}/>\r\n//             return <Component {...this.props}/>\r\n//         }\r\n//\r\n//         let\r\n//         RedirectComponentsClass = connect(mapStateToPropsForRedirect)(RedirectComponents)\r\n//     }\r\n//     let RedirectComponentsClass = connect(mapStateToPropsForRedirect)(RedirectComponents)\r\n//     return RedirectComponentsClass;\r\n// }\r\n//\r\n// export default withAuthenRedirect;","import React from 'react';\r\nimport {addMessData, updeteNewMess} from \"../../../redux/message_reducer\";\r\nimport Mes from \"./Message\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthenRedirect from \"../../HOC/withAuthenRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\n\r\nconst MessegForm = reduxForm({form: 'message'})(Mes)\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        mes: state.messageStat,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        addMes: (newText)=>{\r\n           dispatch(addMessData(newText))\r\n        },\r\n        Change: (mes)=>{\r\n            dispatch(updeteNewMess(mes))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose (\r\n    connect (mapStateToProps,mapDispatchToProps),\r\n    withAuthenRedirect\r\n)(MessegForm)","import React from 'react';\r\nimport c from './Users.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = (props) => {\r\n\r\n    let messanges = '/Messages/' + props.id;\r\n    return (\r\n        <div className={c.us}>\r\n            <div>\r\n            <img src={props.img} alt={props.ava}/>\r\n            </div>\r\n            <div>\r\n            <NavLink activeClassName={c.active} to={messanges}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet Us = (props) => {\r\n\r\n    let usersName = props.usersName.map(names => <User name={names.name} key={names.id} id={names.id} img={names.img}/>)\r\n\r\n    return (\r\n        <div className={c.users}>\r\n            {usersName}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Us;\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Us from \"./Users\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        usersName: state.messageStat.userData\r\n    }\r\n}\r\n\r\nconst UsConteiner = connect(mapStateToProps)(Us);\r\nexport default UsConteiner;\r\n\r\n","import React from 'react';\r\nimport c from './Messages.module.css';\r\nimport MesConteiner from \"./Message/MessageConteiner\";\r\nimport UsConteiner from \"./Users/UsersConteiner\";\r\n\r\n\r\nlet Message = (props) => {\r\n\r\nreturn (\r\n    <div className={c.messages}>\r\n        <UsConteiner  />\r\n        <MesConteiner store={props.store}/>\r\n    </div>\r\n)\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport c from './Music.module.css';\r\n\r\nlet  Music = () => {\r\n    return (\r\n        <div className={c.music}>\r\nttttttt\r\n        </div>\r\n    )\r\n};\r\nexport default Music;","import React from 'react';\r\nimport c from './News.module.css';\r\n\r\nlet  News = () => {\r\n    return (\r\n        <div className={c.music}>\r\nmmmmmmm\r\n        </div>\r\n    )\r\n};\r\nexport default News;","import * as axios from \"axios\";\r\n\r\nconst intApi = axios.create({\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '184d53c7-5438-4178-b9bb-88c8fc5c0d35'},\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\nexport const UserApiDelete = (id)=>{\r\n    return intApi.delete(`follow/${id}`)};\r\n\r\nexport const UserApiPost = (id)=>{\r\n   return  intApi.post(`follow/${id}`,{})};\r\n\r\nexport const MeApi =()=>{\r\n    return intApi.get(`auth/me`)};\r\n\r\nexport const UserApiProfil = (currentPage, pageSize) => {\r\n    return intApi.get(`users?page=${currentPage}&count=${pageSize}`)};\r\n\r\nexport const GetUsersApi = (userId)=>{\r\n    return intApi.get('profile/'+ userId)};\r\n\r\nexport const FotoUsersApi = (photos)=>{\r\n    const formData = new FormData();\r\n    formData.append(\"image\", photos);\r\n    return intApi.put('/profile/photo', formData, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    })};\r\n\r\n export const getUsers = (userId)=>{\r\n     return intApi.get('profile/status/'+ userId)};\r\n\r\nexport const putUsers = (status)=>{\r\n    return intApi.put('profile/status/',{status})};\r\n\r\nexport const postLogin = (email, password,rememberMe,captcha)=>{\r\n    return intApi.post('/auth/login',{email, password,rememberMe,captcha})};\r\n\r\nexport const deleteLogin = ()=>{\r\n    return intApi.delete('/auth/login')};\r\n\r\nexport const saveCont = (profile)=>{\r\n    return intApi.put('profile',profile )};\r\n\r\nexport const securityCaptcha = ()=>{\r\n    return intApi.get('security/get-captcha-url')};","import {UserApiDelete, UserApiPost, UserApiProfil} from \"../components/API/api\";\r\n\r\n\r\nconst APPEND_NEW_FREND = 'frends/APPEND_NEW_FREND';\r\nconst REMOVE_FREND = 'frends/REMOVE_FREND';\r\nconst SET_FRENDS = 'frends/SET_FRENDS';\r\nconst SET_PAGE = 'frends/SET_PAGE';\r\nconst TOTAL_USER_PAGE = 'frends/TOTAL_USER_PAGE';\r\nconst SET_IS_LOADING = 'frends/SET_IS_LOADING';\r\nconst BLOCK_BUTTON = 'frends/BLOCK_BUTTON';\r\n\r\n\r\nlet inicial = {\r\n    users: [],\r\n    pageSize: 4,\r\n    totalPage: 0,\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    blockButton: [],\r\n\r\n};\r\n\r\nconst frendsReducer = (state = inicial, action) => {\r\n    let AppendRemoveFrend = (NewFollowed) => {\r\n        return {\r\n            ...state,\r\n            users: state.users.map(u => {\r\n                if (u.id === action.userId) {\r\n                    return {...u, ...NewFollowed}\r\n                }\r\n                return u;\r\n            })\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case APPEND_NEW_FREND:\r\n            return (\r\n                AppendRemoveFrend({followed: false})\r\n            )\r\n        case REMOVE_FREND:\r\n            debugger\r\n            return (\r\n                AppendRemoveFrend({followed: true})\r\n            )\r\n        case SET_FRENDS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case SET_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case TOTAL_USER_PAGE:\r\n            return {\r\n                ...state, totalPage: action.totalPages\r\n            }\r\n        case SET_IS_LOADING:\r\n            return {\r\n                ...state, isLoading: action.isLoading\r\n            }\r\n        case BLOCK_BUTTON:\r\n            return {\r\n                ...state, blockButton: action.isLoading ? [...state.blockButton, action.userId]\r\n                    : state.blockButton.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const removeFrend = (userId) => {\r\n    return {\r\n        type: REMOVE_FREND, userId\r\n    }\r\n};\r\nexport const appendNewFrend = (userId) => {\r\n    return {\r\n        type: APPEND_NEW_FREND, userId\r\n    }\r\n};\r\nexport const setFrend = (users) => {\r\n    return ({\r\n        type: SET_FRENDS, users\r\n    })\r\n};\r\nexport const setPage = (currentPage) => {\r\n    return ({\r\n        type: SET_PAGE, currentPage\r\n    })\r\n};\r\nexport const totalUserPage = (totalPages) => {\r\n    return ({\r\n        type: TOTAL_USER_PAGE, totalPages\r\n    })\r\n};\r\nexport const setIsLoading = (isLoading) => {\r\n    return ({\r\n        type: SET_IS_LOADING, isLoading\r\n    })\r\n};\r\nexport const pressButton = (isLoading, userId) => {\r\n    return ({\r\n        type: BLOCK_BUTTON, isLoading, userId\r\n    })\r\n};\r\nexport const setUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsLoading(true));\r\n        let response = await UserApiProfil(currentPage, pageSize);\r\n        dispatch(setFrend(response.data.items));\r\n        dispatch(totalUserPage(response.data.totalCount));\r\n        dispatch(setIsLoading(false));\r\n    }\r\n};\r\n\r\nlet UserApiDeletePost = (UserApi, NewFrend, id) => {\r\n    return async (dispatch) => {\r\n        dispatch(pressButton(true, id));\r\n        let response = await UserApi(id)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(NewFrend(id))\r\n        }\r\n        dispatch(pressButton(false, id));\r\n    }\r\n}\r\nexport const setDelete = (id) => {\r\n    return UserApiDeletePost(UserApiDelete, appendNewFrend, id)\r\n\r\n\r\n};\r\nexport const setPost = (id) => {\r\n    return UserApiDeletePost(UserApiPost, removeFrend, id)\r\n\r\n};\r\n\r\n\r\nexport default frendsReducer;","export const getUser = (state)=>{\r\n    return (\r\n        state.frendsStat.users\r\n    )\r\n};\r\nexport const getTotalPage = (state)=>{\r\n    return (\r\n        state.frendsStat.totalPage\r\n    )\r\n};\r\nexport const getPageSize = (state)=>{\r\n    return (\r\n        state.frendsStat.pageSize\r\n    )\r\n};\r\nexport const getCurrentPage = (state)=>{\r\n    return (\r\n        state.frendsStat.currentPage\r\n    )\r\n};\r\nexport const getIsLoading = (state)=>{\r\n    return (\r\n        state.frendsStat.isLoading\r\n    )\r\n};\r\nexport const getBlockButton = (state)=>{\r\n    return (\r\n        state.frendsStat.blockButton\r\n    )\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport Pagination from 'react-paginating';\r\nimport {\r\n    getBlockButton,\r\n    getCurrentPage,\r\n    getIsLoading,\r\n    getPageSize,\r\n    getTotalPage,\r\n    getUser\r\n} from \"../../../redux/reselect_frends\";\r\nimport {connect} from \"react-redux\";\r\nimport c from \"../../setFrends/frend.module.css\";\r\nimport {setDelete, setPage, setPost, setUsers} from \"../../../redux/frends_reducer\";\r\n\r\n\r\nclass Paginat extends React.Component {\r\n\r\n\r\n    handlePageChange = (page) => {\r\n        this.props.setUsers(page, this.props.pageSize)\r\n        this.props.setPage(page);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Pagination\r\n                    total={this.props.totalPage}\r\n                    pageCount={25}\r\n                    currentPage={this.props.currentPage}\r\n                    limit={this.props.pageSize}\r\n                >\r\n                    {({\r\n                          pages,\r\n                          currentPage,\r\n                          hasNextPage,\r\n                          hasPreviousPage,\r\n                          previousPage,\r\n                          nextPage,\r\n                          totalPages,\r\n                          getPageItemProps\r\n                      }) => (\r\n                        <div className={c.paginat}>\r\n                            <button className={c.big}\r\n                                    {...getPageItemProps({\r\n                                        pageValue: 1,\r\n                                        onPageChange: this.handlePageChange\r\n                                    })}\r\n                            >\r\n                                первая\r\n                            </button>\r\n\r\n                            {hasPreviousPage && (\r\n                                <button\r\n                                    {...getPageItemProps({\r\n                                        pageValue: previousPage,\r\n                                        onPageChange: this.handlePageChange\r\n                                    })}\r\n                                >\r\n                                    {'<'}\r\n                                </button>\r\n                            )}\r\n\r\n                            {pages.map(page => {\r\n                                let activePage = null;\r\n                                if (currentPage === page) {\r\n                                    activePage = {backgroundColor: 'darkorange'};\r\n                                }\r\n                                return (\r\n                                    <button\r\n                                        key={page}\r\n                                        style={activePage}\r\n                                        {...getPageItemProps({\r\n                                            pageValue: page,\r\n                                            onPageChange: this.handlePageChange\r\n                                        })}\r\n                                    >\r\n                                        {page}\r\n                                    </button>\r\n                                );\r\n                            })}\r\n\r\n                            {hasNextPage && (\r\n                                <button\r\n                                    {...getPageItemProps({\r\n                                        pageValue: nextPage,\r\n                                        onPageChange: this.handlePageChange\r\n                                    })}\r\n                                >\r\n                                    {'>'}\r\n                                </button>\r\n                            )}\r\n\r\n                            <button className={c.big}\r\n                                    {...getPageItemProps({\r\n                                        pageValue: totalPages,\r\n                                        onPageChange: this.handlePageChange\r\n                                    })}\r\n                            >\r\n                                последняя\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </Pagination>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: getUser(state),\r\n        totalPage: getTotalPage(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        blockButton: getBlockButton(state),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {setUsers, setPage, setPost, setDelete})(Paginat)\r\n","import React from 'react';\r\nimport c from \"./frend.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport foto from \"../../no foto/default_avatar_5d937716c1098.jpg\";\r\nimport Paginat from \"../compon/Pagination/pagination\";\r\n\r\n\r\nconst SetFrend = (props) => {\r\n    return  <div className={c.frend}>\r\n        {props.users.map(u => <div key={u.id} className={c.data}>\r\n            <div className={c.ava}>\r\n                <div><NavLink to={'/Content' + '/' + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : foto} alt='ava'/>\r\n                </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed\r\n                        ?\r\n                        <button disabled={props.blockButton.some(id => id === u.id)} className={c.red}\r\n                                onClick={() => {\r\n                                    props.setDelete(u.id)\r\n                                }}>Удалить</button>\r\n                        : <button disabled={props.blockButton.some(id => id === u.id)}\r\n                                  className={c.green} onClick={() => {\r\n                            props.setPost(u.id)\r\n                        }}>Добавить</button>}\r\n                </div>\r\n            </div>\r\n            <div className={c.description}>\r\n                <div className={c.name}>{u.name}</div>\r\n                <div className={c.name}>{u.name}</div>\r\n                <div className={c.status}>{u.status != null ? u.status : 'Без статуса'}</div>\r\n\r\n            </div>\r\n        </div>)}\r\n    <Paginat />\r\n    </div>\r\n};\r\n\r\nexport default SetFrend;","import React from \"react\";\r\nimport load from \"../../../no foto/99aa7a_19e4c74d26a94c8ba729003cab00f4d2_mv2.gif\";\r\n\r\n\r\nlet Preloader = ()=>{\r\n    return (\r\n        <img src={load} style={{width:'30%'}}/>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    appendNewFrend, pressButton,\r\n    removeFrend, setDelete,\r\n    setPage, setPost, setUsers,\r\n} from '../../redux/frends_reducer';\r\nimport SetFrend from './setFrends';\r\nimport Preloader from \"../compon/preloader/preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getBlockButton,\r\n    getCurrentPage,\r\n    getIsLoading,\r\n    getPageSize,\r\n    getTotalPage,\r\n    getUser,\r\n} from \"../../redux/reselect_frends\";\r\n\r\n\r\n\r\nclass SetFrendAPI extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setUsers(this.props.currentPage, this.props.pageSize);\r\n    };\r\n\r\n    changePage = (currentPage) => {\r\n        this.props.setUsers(currentPage,this.props.pageSize)\r\n        this.props.setPage(currentPage);\r\n    }\r\n\r\n    render() {\r\n        return <div >\r\n            {this.props.isLoading ? <Preloader /> : null}\r\n            <SetFrend totalPage={this.props.totalPage}\r\n                      pageSize={this.props.pageSize}\r\n                      users={this.props.users}\r\n                      appendFrend={this.props.appendNewFrend}\r\n                      removeFrend={this.props.removeFrend}\r\n                      changePage={this.changePage}\r\n                      currentPage={this.props.currentPage}\r\n                      blockButton={this.props.blockButton}\r\n                      pressButton={this.props.pressButton}\r\n                      setDelete={this.props.setDelete}\r\n                      setPost={this.props.setPost}\r\n                      isCheck={this.props.isCheck}/>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: getUser(state),\r\n        totalPage: getTotalPage(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        blockButton: getBlockButton(state),\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{removeFrend, appendNewFrend,\r\n        setPage,pressButton,setUsers,setDelete,setPost}),\r\n)(SetFrendAPI)","import React from 'react';\r\nimport c from './Contents.module.css'\r\nimport Preloader from '../compon/preloader/preloader';\r\nimport no from '../../no foto/no.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Content = (props) => {\r\nif(!props.profile){\r\n    return <Preloader />\r\n}\r\n   return (\r\n        <div className={c.contents}>\r\n\r\n                <img src={props.profile.photos.small !=null? props.profile.photos.small\r\n                    : no  } alt='avatarka'/>\r\n                <div>{props.profile.aboutMe}</div>\r\n                <div>{props.profile.lookingForAJob === false ? 'ищу работу' : 'не нужна работа' }</div>\r\n            <span>{props.status }</span>\r\n            <div><NavLink to={'/Frends'}>Назад</NavLink></div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Content;","import {FotoUsersApi, getUsers, GetUsersApi, putUsers, saveCont} from \"../components/API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst UPDETE_NEW_POST = 'content/UPDETE_NEW_POST';\r\nconst ADD_MESS = 'content/ADD_MESS';\r\nconst SET_FRENS_LOOK = 'content/SET_FRENS_LOOK';\r\nconst SET_STATUS = 'content/SET_STATUS';\r\nconst PHOTOS_USERS = 'content/PHOTOS_USERS';\r\n\r\nlet inicial = {\r\n    postData: [\r\n        {id: 1, messang: 'Привет Ира', age: '45 лет', laik: '30'},\r\n        {id: 2, messang: 'Привет Андрей', age: '39 лет', laik: '20'},\r\n    ],\r\n\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst contentReducer = (state = inicial, action, PHOTO_USERS) => {\r\n    // let stateCopy = {...state,postData:[...state.postData] };\r\n    switch (action.type) {\r\n        case ADD_MESS:\r\n            let newM = {\r\n                id: 3, messang: action.mes, age: 45, laik: 0\r\n            };\r\n            return ({\r\n                ...state,\r\n                postData: [...state.postData, (newM)],\r\n\r\n            })\r\n        // stateCopy.postData.push(newM);\r\n        // stateCopy.newText = '';\r\n        // return stateCopy;\r\n        case UPDETE_NEW_POST:\r\n            return ({\r\n                ...state,\r\n                newText: action.newText\r\n            })\r\n        // stateCopy.newText = action.newText;\r\n        // return stateCopy;\r\n        case  SET_FRENS_LOOK:\r\n            return ({\r\n                ...state, profile: action.profile\r\n            })\r\n        case  SET_STATUS:\r\n            return ({\r\n                ...state, status: action.status\r\n            })\r\n        case  PHOTOS_USERS:\r\n            return ({\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addMessActiv = (mes) => {\r\n    return {\r\n        type: ADD_MESS, mes\r\n    }\r\n};\r\n\r\nexport const SetFrendsLook = (profile) => {\r\n    return {\r\n        type: SET_FRENS_LOOK, profile\r\n    }\r\n};\r\nexport const SetStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS, status\r\n    }\r\n};\r\nexport const photoUsers = (photos) => {\r\n    return {\r\n        type: PHOTOS_USERS, photos\r\n    }\r\n};\r\n\r\nexport const SetFrends = (usersId) => {\r\n    return (dispatch) => {\r\n        GetUsersApi(usersId).then(response => {\r\n            dispatch(SetFrendsLook(response.data))\r\n        });\r\n    }\r\n}\r\nexport const getStatus = (usersId) => {\r\n    return (dispatch) => {\r\n        getUsers(usersId).then(response => {\r\n            dispatch(SetStatus(response.data))\r\n        });\r\n    }\r\n}\r\nexport const putStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await putUsers(status);\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(SetStatus(status));\r\n        }\r\n    }\r\n}\r\n\r\nexport const photoUsersId = (photos) => {\r\n    return async (dispatch) => {\r\n        let response= await FotoUsersApi(photos);\r\n        if(response.data.resultCode ===0 ) {\r\n            dispatch(photoUsers(response.data.data.photos));\r\n        }\r\n    }\r\n}\r\nexport const saveContact = (profile) => {\r\n    return async (dispatch) => {\r\n        let response= await saveCont(profile);\r\n        if(response.data.resultCode === 0 ) {\r\n             dispatch(SetFrendsLook(profile));\r\n        }\r\n        else {\r\n            dispatch(stopSubmit ('Contact', {_error: response.data.messages[0]}))\r\n            return Promise.reject(response.data.messages[0])\r\n        }\r\n    }\r\n}\r\nexport default contentReducer;","export const getProfile = (state)=>{\r\n    return (\r\n        state.contentStat.profile\r\n    )\r\n};\r\nexport const getStatusUsers = (state)=>{\r\n    return (\r\n        state.contentStat.status\r\n    )\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport Content from \"./Content\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, SetFrends} from \"../../redux/content_reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getProfile, getStatusUsers} from \"../../redux/reselect_profale\";\r\n\r\n\r\nclass ContentConteiner extends React.Component {\r\n    componentDidMount() {\r\n            this.props.SetFrends(this.props.match.params.usersId)\r\n            this.props.getStatus(this.props.match.params.usersId)\r\n    }\r\n\r\n    render() {\r\n        return <Content {...this.props} profile={this.props.profile}\r\n                        status={this.props.status} isLogin={this.props.isLogin}/>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n        status: getStatusUsers(state),\r\n    }\r\n}\r\n\r\nlet WithNewRouter = withRouter(ContentConteiner)\r\n\r\nexport default connect(mapStateToProps, {SetFrends, getStatus})(WithNewRouter);\r\n\r\n","import React from 'react';\r\nimport c from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from '../../logo.png'\r\n\r\nlet Header = (props) => {\r\n    return <header className={c.header}>\r\n        <div>\r\n            <img src={logo} alt='logo'/>\r\n            <div className={c.load}>{props.isCheck ?<div> <span>{props.isLogin}</span>\r\n                    <button onClick={props.deleteName}>Выход</button></div>\r\n                :<NavLink to={'/Registration'}> </NavLink>}</div>\r\n        </div>\r\n        <div>\r\n            <h1><pre>М О Я      С О Ц И А Л Ь Н А Я      С Т Р А Н И Ц А</pre></h1>\r\n        </div>\r\n    </header>\r\n}\r\nexport default Header;","import {deleteLogin, MeApi, postLogin, securityCaptcha} from \"../components/API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_ATHEN_USER_DATA = 'Authen/SET_ATHEN_USER_DATA ';\r\nconst DELETE_ATHEN_USER_DATA = 'Authen/DELETE_ATHEN_USER_DATA';\r\nconst GET_CAPTCHA = 'Authen/GET_CAPTCHA'\r\n\r\nlet inicial = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isCheck: false,\r\n    myCaptcha:null,\r\n};\r\n\r\n\r\n\r\nconst authentReducer = (state = inicial, action) => {\r\n    let AthenDeleteUsers = (NewObject)=>{\r\n        return {...state,\r\n            ...action.data,\r\n            ...NewObject}\r\n    }\r\n    switch (action.type) {\r\n\r\n        case  SET_ATHEN_USER_DATA:\r\n            return (\r\n                AthenDeleteUsers( {isCheck: true})\r\n            )\r\n        case  DELETE_ATHEN_USER_DATA:\r\n            return (\r\n                AthenDeleteUsers( {isCheck: false})\r\n            )\r\n            case GET_CAPTCHA :\r\n            return ({\r\n                ...state, myCaptcha:action.myCaptcha\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setAuthenUserData = (data, isCheck) => {\r\n    return {\r\n        type: SET_ATHEN_USER_DATA, data, isCheck\r\n    }\r\n};\r\nexport const deleteAuthenUserData = (data, isCheck) => {\r\n    return {\r\n        type: DELETE_ATHEN_USER_DATA, data, isCheck\r\n    }\r\n};\r\nexport const getSecurity = (myCaptcha) => {\r\n    return {\r\n        type: GET_CAPTCHA, myCaptcha\r\n    }\r\n};\r\nexport const setAuthenUser = () => {\r\n    return (dispatch) => {\r\n        return MeApi().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthenUserData(response.data.data, true))\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const postName = (email, password, rememberMe,captcha) => {\r\n    return async (dispatch) => {\r\n        const response = await postLogin(email, password, rememberMe,captcha);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthenUser());\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n            dispatch(getSecurityCaptchaUrl());\r\n        }\r\n            dispatch(stopSubmit('login', {_error:'Неправильная почта или пароль'}))\r\n        }\r\n    }\r\n};\r\n\r\nexport const deleteName = () => {\r\n    return async (dispatch) => {\r\n        const response = await deleteLogin();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(deleteAuthenUserData(null, false));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const getSecurityCaptchaUrl = () => {\r\n    return async (dispatch) => {\r\n        const response = await securityCaptcha();\r\n        dispatch(getSecurity(response.data.url))}\r\n    }\r\n\r\n\r\nexport default authentReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteName} from \"../../redux/authen_reducer\";\r\nimport {getIsCheck, getIsLogin, getIsMail} from \"../../redux/reselect_authen\";\r\n\r\n\r\nclass HeaderConteiner extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isCheck: getIsCheck(state),\r\n        isLogin: getIsLogin(state),\r\n        isMail: getIsMail(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {deleteName})(HeaderConteiner);","import React from \"react\";\r\nimport c from \"./Input.module.css\"\r\n\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {meta.touched && meta.error && <span className={c.error}>{meta.error}</span>}\r\n            </div>\r\n            <div className={c.inputs + ' ' + c.error}>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const NewField = (name, component, id, type, validate) => {\r\n    return <Field name={name} component={component} id={id} type={type}\r\n                  validate={validate} />\r\n}","import React from 'react';\r\nimport c from './registration.module.css'\r\nimport {reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {postName} from \"../../redux/authen_reducer\";\r\nimport {maxLength, minLength, required, validate} from \"../../validator/validator\";\r\nimport {Input} from \"../compon/Redux-Forms/input\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getIsCheck} from \"../../redux/reselect_authen\";\r\nimport {NewField} from \"../compon/Redux-Forms/Form_Field\";\r\n\r\n\r\nconst maxLengths = maxLength(50)\r\nconst minLengths = minLength(2)\r\nconst minLengthPassword = minLength(5)\r\n\r\n    const Registr = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit}  >\r\n        <div>\r\n            <label htmlFor={c.text}>Email</label>\r\n        </div>\r\n        <div>\r\n            {NewField('email', Input, c.text, 'text',\r\n                [required, maxLengths, minLengths, validate])}\r\n        </div>\r\n        <div>\r\n            <label htmlFor={c.password}>Пароль</label>\r\n        </div>\r\n        <div>\r\n            {NewField('password', Input, c.password, 'password',\r\n                [required, maxLengths, minLengthPassword])}\r\n        </div>\r\n        <div>\r\n            {NewField('rememberMe', 'input', c.checkbox, 'checkbox')}\r\n            <label htmlFor={c.checkbox}>запомнить меня</label>\r\n        </div>\r\n        <div className={c.errors}>\r\n            {props.error}\r\n        </div>\r\n        <div>\r\n            {props.myCaptcha && <img src={props.myCaptcha}/>}\r\n            {props.myCaptcha && NewField('captcha', Input, null, 'text',)}\r\n        </div>\r\n        <div>\r\n            <button id={c.registration} >Регистрация</button>\r\n        </div>\r\n    </form>\r\n\r\n};\r\n\r\nconst RegistrForm = reduxForm({form: 'login'})(Registr);\r\n\r\nconst Registration = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.postName(formData.email, formData.password, formData.rememberMe,formData.captcha)\r\n    };\r\n    if (props.isCheck) {\r\n        return <Redirect to='/me'/>\r\n    }\r\n    return <div className={c.registration}>РЕГИСТРАЦИЯ\r\n        <RegistrForm onSubmit={onSubmit} myCaptcha={props.myCaptcha}/>\r\n\r\n    </div>\r\n};\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isCheck: getIsCheck(state),\r\n        myCaptcha:state.authen.myCaptcha\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {postName})(Registration)\r\n","import React from 'react';\r\nimport c from './Post.module.css';\r\n\r\nlet Post = (props) => {\r\n\r\n    return (\r\n        <div className={c.post}>\r\n            {props.messang} {props.age}\r\n            <div>\r\n                laik {props.laik}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, minLength, required} from \"../../../validator/validator\";\r\nimport {Textarea} from \"../../compon/Redux-Forms/Textarea\";\r\nimport c from './MyPost.module.css'\r\n\r\n\r\n\r\nconst MyPost = (props) => {\r\n    let MyPosts = props.postData.postData.map(posts => <Post messang={posts.messang}\r\n                                                             key={posts.id}\r\n                                                             age={posts.age}\r\n                                                             laik={posts.laik}/>);\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.mes)\r\n    };\r\n    return (\r\n        <div>\r\n            <PostForm onSubmit={addPost}/>\r\n            {MyPosts}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLengths = maxLength(10);\r\nconst minLengths = minLength(3)\r\nconst MyText = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={c.textarea}>\r\n            <div >\r\n                <Field component={Textarea} name={'mes'} validate={[required, maxLengths,minLengths]}/>\r\n            </div>\r\n            <div>\r\n                <button>ввести</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst PostForm = reduxForm({form: 'newPost'})(MyText)\r\nexport default MyPost;\r\n\r\n\r\n","import React from 'react';\r\nimport {addMessActiv} from \"../../../redux/content_reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.contentStat\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (mes) => {\r\n            dispatch(addMessActiv(mes))\r\n        }\r\n    };\r\n}\r\nconst MyPostConteiner = connect (mapStateToProps,mapDispatchToProps)(MyPost);\r\n\r\n\r\nexport default MyPostConteiner;","import React, {useEffect, useState} from \"react\";\r\nimport c from './Content.module.css'\r\n\r\n\r\nconst MyStatus = (props) => {\r\n\r\n    const [mode, setMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const addDoubleClick = () => {\r\n        setMode(true)\r\n    }\r\n\r\n    const removeDoubleClick = () => {\r\n        setMode(false)\r\n        props.putStatus(status)\r\n    }\r\n    const onChengeUsers = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={c.myStatus}>\r\n            {!mode &&\r\n            <div>\r\n                <span onDoubleClick={addDoubleClick}>Мой статус:{status}</span>\r\n            </div>}\r\n            {mode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={removeDoubleClick} value={status}\r\n                       onChange={onChengeUsers}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyStatus;","import React from 'react';\r\nimport {Input} from \"../compon/Redux-Forms/input\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {NewField} from \"../compon/Redux-Forms/Form_Field\";\r\nimport {Textarea} from \"../compon/Redux-Forms/Textarea\";\r\nimport c from \"./MyDataContact.module.css\";\r\n\r\n\r\nconst MyChangleDataContact = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit} className={c.data}>\r\n        <div className={c.errors}>\r\n            {props.error}\r\n        </div>\r\n        <div>\r\n            <button>Сохранить данные</button>\r\n        </div>\r\n        <div><b>Мое имя:</b>{NewField('fullName', Textarea)}</div>\r\n        <div><b>Ищу работу:</b>{NewField('lookingForAJob',\r\n            'Input', null, 'checkbox')}</div>\r\n        <div><b>О себе:</b>{NewField('lookingForAJobDescription', Textarea)}</div>\r\n        <div><b>Мои контакты:</b> {Object.keys(props.profile.contacts).map(k => {\r\n            return <div> <b>{k}</b>: {NewField('contacts.' + k, Input, null, null,\r\n            )}</div>\r\n        })}</div>\r\n    </form>\r\n}\r\n\r\nconst ChangleDataContact = reduxForm({form: 'Contact'})(MyChangleDataContact)\r\nexport default ChangleDataContact;","import React, {useState} from 'react';\r\nimport c from './Content.module.css'\r\nimport MyPostConteiner from \"./MyPost/MyPostConteinr\";\r\nimport MyStatus from \"./MyStatus\";\r\nimport Preloader from \"../compon/preloader/preloader\";\r\nimport ChangleDataContact from \"./MyDataContact\";\r\nimport city from '../../no foto/cityjpg.jpg'\r\n\r\nlet Contents = (props) => {\r\n    const [mode, setMode] = useState(false)\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSavePhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.photoUsersId(e.target.files[0])\r\n        }\r\n    }\r\n    const changeData = () => {\r\n        setMode(true)\r\n    }\r\n    let saveContacts = (FormData) => {\r\n        props.saveContact(FormData).then(() => {\r\n            setMode(false)\r\n        })\r\n    }\r\n    const MyContact = ({mySocialNetwork, myAddress}) => {\r\n        return (\r\n            <div><b>{mySocialNetwork}:</b>{myAddress}</div>\r\n        )\r\n    }\r\n\r\n    const MyDataContact = () => {\r\n        return <div className={c.changeData}>\r\n            <div>\r\n                <button onClick={changeData}>Изменить данные</button>\r\n            </div>\r\n            <div><b>Мое имя:</b>{props.profile.fullName}</div>\r\n            <div><b>Мой ID:</b>{props.userAuthId}</div>\r\n            <div><b>Ищу работу:</b>{props.profile.lookingForAJob === false ? 'НЕТ' : 'ДА'}</div>\r\n            <div><b>О себе:</b>{props.profile.lookingForAJobDescription}</div>\r\n            <div><b>Мои контакты:</b> {Object.keys(props.profile.contacts).map(k => {\r\n                return <MyContact key={k} mySocialNetwork={k}\r\n                                  myAddress={props.profile.contacts[k] === null||':' ? 'Не заполнено'\r\n                                      : props.profile.contacts[k]}/>\r\n            })}</div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={c.content}>\r\n            <div>\r\n                <img className={c.citi}\r\n                     src={city}\r\n                     alt=\"logo\"/>\r\n            </div>\r\n            <div>\r\n                <img src={props.profile.photos.large} alt={'ava'} className={c.MyAvatar}/>\r\n                <div className={c.onSavePhoto}>\r\n                    <label for=\"files\"><b>Изменить фотографию</b></label>\r\n                    <input type=\"file\" name=\"file\" onChange={onSavePhoto} id='files' />\r\n                </div>\r\n            </div>\r\n            <div className={c.cont}>\r\n                <div>\r\n                    <MyStatus status={props.status} putStatus={props.putStatus}/>\r\n                </div>\r\n                {!mode && <div className={c.data}>\r\n                    <MyDataContact profile={props.profile}/>\r\n                </div>}\r\n                {mode && <div className={c.data}>\r\n                    <ChangleDataContact profile={props.profile} onSubmit={saveContacts}\r\n                                        initialValues={props.profile}/>\r\n                </div>}\r\n            </div>\r\n            <div className={c.myPost}>\r\n                <MyPostConteiner store={props.store}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//\r\n\r\nexport default Contents;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Contents from \"./Contents\";\r\nimport withAuthenRedirect from \"../HOC/withAuthenRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getStatus, photoUsersId, putStatus, saveContact, SetFrends} from \"../../redux/content_reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getUserAuthId} from \"../../redux/reselect_authen\";\r\nimport {getProfile, getStatusUsers} from \"../../redux/reselect_profale\";\r\n\r\n\r\n\r\nclass Conten extends React.Component {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.SetFrends(this.props.userAuthId)\r\n        this.props.getStatus(this.props.userAuthId)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\nif(this.props.userAuthId !== prevProps.userAuthId)\r\n            this.props.SetFrends(this.props.userAuthId);\r\n            this.props.getStatus(this.props.userAuthId);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <Contents {...this.props} profile={this.props.profile}\r\n                         status={this.props.status} isLogin={this.props.isLogin}\r\n                          photoUsersId={this.props.photoUsersId}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n            status: getStatusUsers(state),\r\n            profile: getProfile(state),\r\n            userAuthId: getUserAuthId(state),\r\n        }\r\n    )\r\n\r\n}\r\n\r\nlet WithNewRouter = withRouter(Conten)\r\nexport default compose(\r\n    connect(mapStateToProps, {getStatus, putStatus, SetFrends, photoUsersId,saveContact}),\r\n    withAuthenRedirect)\r\n(WithNewRouter)\r\n\r\n","\r\nimport {setAuthenUser} from \"./authen_reducer\";\r\n\r\nconst WAITING_TO_ENTER = 'WAITING_TO_ENTER ';\r\n\r\n\r\nlet inicial = {\r\n    entrance: false,\r\n\r\n    };\r\n\r\nconst appReducer = (state = inicial, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case  WAITING_TO_ENTER:\r\n            return ({\r\n                ...state,\r\n                entrance: true\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const waitingToEnter = () => {\r\n    return {\r\n        type: WAITING_TO_ENTER\r\n    }\r\n};\r\n\r\nexport const waitingToEnterUser = () => {\r\n    return(dispatch) => {\r\n       let promis = dispatch(setAuthenUser());\r\n       promis.then(()=>{\r\n           dispatch(waitingToEnter())\r\n       })\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default appReducer;","export const getEntrance = (state)=>{\r\n    return (\r\n        state.app.entrance\r\n    )\r\n};\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport messageReducer from \"./message_reducer\";\r\nimport contentReducer from \"./content_reducer\";\r\nimport frendsReducer from \"./frends_reducer\";\r\nimport authentReducer from \"./authen_reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app_reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    messageStat: messageReducer,\r\n    contentStat: contentReducer,\r\n    form: formReducer,\r\n    frendsStat: frendsReducer,\r\n    authen: authentReducer,\r\n    app: appReducer,\r\n\r\n})\r\nlet store = createStore(reducers,applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport Navig from './components/Navig/Navig';\nimport Messages from \"./components/Messages/Messendg\";\nimport {BrowserRouter, HashRouter, Route, withRouter} from \"react-router-dom\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport SetFrendConteiner from \"./components/setFrends/setFrendsConteiner\";\nimport ContentConteiner from \"./components/Content/ContentConteiner\";\nimport HeaderConteiner from \"./components/Header/HeaderConteiner\";\nimport Registration from \"./components/registration/registration\";\nimport MyNameConteiner from \"./components/Content/MyNameConteiner\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport {waitingToEnterUser} from \"./redux/app_reducer\";\nimport Preloader from \"./components/compon/preloader/preloader\";\nimport {getEntrance} from \"./redux/reselect_app\";\nimport store from \"./redux/redux_store\";\nimport Header from \"./components/Header/Header\";\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.waitingToEnterUser();\n    };\n\n\n    render() {\n        if (!this.props.entrance) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app\">\n                <HeaderConteiner/>\n                <Navig/>\n\n                {/*/!*<Route path='/Content' component={Content}/>*!/ можно и так оьобразить, но лучше через render*/}\n                {/*<Route path='/Messages' component={Messages}/>*/}\n                {/*<Route path='/News' component={News}/>*/}\n                {/*<Route path='/Music' component={Music}/>*/}\n                {/*<Route path='/Settins' component={Settings}/>*/}\n                <Route path='/me' render={() => <MyNameConteiner/>} store={this.props.store}/>\n                <Route path='/Content/:usersId' render={() => <ContentConteiner store={this.props.store}/>}/>\n                <Route path='/Messages' render={() => <Messages\n                    store={this.props.store}/>}/>\n                <Route path='/News' render={() => <News/>}/>\n                <Route path='/Music' render={() => <Music/>}/>\n                <Route path='/Frends' render={() => <SetFrendConteiner/>}/>\n                <Route path='/Registration' render={() => <Registration/>}/>\n                {/*<Route path='/Settins' component={Settings}/>*/}\n\n\n            </div>\n\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        entrance: getEntrance(state),\n\n    }\n}\n\n\nlet AppContener = compose(withRouter,\n    connect(mapStateToProps, {waitingToEnterUser}),\n)(App)\n\nlet NewAppMy = (props) => {\n    return (\n        <React.StrictMode>\n            <HashRouter>\n                <Provider store={store}>\n                    <AppContener/>\n                </Provider>\n            </HashRouter>\n        </React.StrictMode>\n    )\n}\n\nexport default NewAppMy;","import React from 'react';\nimport './index.css';\nimport ReactDOM from \"react-dom\";\nimport NewAppMy from \"./App\";\n\n// let enterNew = () => {\nReactDOM.render(<NewAppMy/>, document.getElementById('root'));\n// }\n// enterNew(store.getState());\n// store.subscribe(() => {\n//     let state = store.getState();\n//     enterNew(state)\n// });\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3Tpw2\",\"frend\":\"Nav_frend__2wIJa\",\"navigations\":\"Nav_navigations__10Mxx\",\"settin\":\"Nav_settin__1prg_\",\"active\":\"Nav_active__1Vc_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__1574P\",\"active\":\"Users_active__3OGas\",\"us\":\"Users_us__26D3U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Input_error__1Md3N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__eF53-\",\"load\":\"Header_load__2QrAz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errors\":\"MyDataContact_errors__ZpDdZ\",\"data\":\"MyDataContact_data__3W-H_\"};"],"sourceRoot":""}